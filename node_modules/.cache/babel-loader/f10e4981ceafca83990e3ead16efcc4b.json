{"ast":null,"code":"var _jsxFileName = \"/Users/jjmarin/Development/code/Mod2/Phase2-project/src/Home.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport CardContainer from './CardContainer/CardContainer';\nimport CitySearch from './CitySearch/CitySearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:3000/cities/\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weather: {\n        name: '',\n        main: {\n          temp: '',\n          temp_max: '',\n          temp_min: ''\n        }\n      },\n      city: [],\n      allCities: []\n    };\n\n    this.componentDidMount = () => {\n      fetch(url).then(res => res.json()).then(newCity => this.setState({\n        allCities: newCity\n      }));\n    };\n\n    this.searchHandle = event => {\n      event.preventDefault();\n      let city = this.state.city;\n      const cityUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=51e464ca4cdfb256e268caccccef8edf`;\n      fetch(cityUrl).then(response => response.json()).then(data => this.setState({\n        weather: data\n      }));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        city: event.target.value\n      });\n    };\n\n    this.addCity = city => {\n      let repackagedCity = { ...city,\n        weather: city.weather[0]\n      };\n      let postOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(repackagedCity)\n      };\n      fetch(url, postOptions).then(res => res.json()).then(newCity => this.setState({\n        allCities: [...this.state.allCities, newCity]\n      })); // console.log ('saved');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Home:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        searchHandle: this.searchHandle,\n        handleChange: this.handleChange,\n        weather: this.state.weather,\n        addCity: this.addCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/jjmarin/Development/code/Mod2/Phase2-project/src/Home.js"],"names":["React","render","CardContainer","CitySearch","url","Home","Component","state","weather","name","main","temp","temp_max","temp_min","city","allCities","componentDidMount","fetch","then","res","json","newCity","setState","searchHandle","event","preventDefault","cityUrl","response","data","handleChange","target","value","addCity","repackagedCity","postOptions","method","headers","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport CardContainer from './CardContainer/CardContainer';\nimport CitySearch from './CitySearch/CitySearch';\n\n\n\nconst url=\"http://localhost:3000/cities/\"\n\nclass Home extends React.Component {\n\n  state={\n      weather:{\n        name:'',\n        main:{\n          temp:'',\n          temp_max:'',\n          temp_min:''\n        }\n      },\n      city:[],\n      allCities:[]\n  }\n\n  componentDidMount=()=>{\n\n    fetch(url)\n    .then(res=>res.json())\n    .then(newCity=> this.setState({allCities:newCity}))\n\n      \n\n\n  }\n\n\n\n\n   \n\n    searchHandle=(event)=>{\n      event.preventDefault();\n\n        let city=this.state.city\n        const cityUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=51e464ca4cdfb256e268caccccef8edf`\n\n          fetch(cityUrl)\n          .then(response => response.json())\n          .then(data=> this.setState({weather:data})\n        \n          )\n\n    }\n\n    handleChange=(event)=>{\n\n\n      this.setState({\n        city: event .target.value\n      })\n\n    }\n\n    addCity=(city)=>{\n      let repackagedCity={\n        ...city,\n        weather:city.weather[0]\n\n      }\n      let postOptions={\n        method: \"POST\",\n        headers:{\n          'Content-Type': 'application/json'\n        \n        },\n        body: JSON.stringify(repackagedCity)\n  \n      }\n\n    fetch(url,postOptions)\n    .then(res=>res.json())\n    .then(newCity=> this.setState({allCities:[...this.state.allCities, newCity]}))\n\n        // console.log ('saved');\n\n    }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n          <h1>Welcome Home:</h1>\n          <br></br>\n          <CitySearch searchHandle={this.searchHandle}\n          handleChange={this.handleChange}\n          weather={this.state.weather}\n          addCity={this.addCity}\n          />\n          \n      </div>\n    );\n  }\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}